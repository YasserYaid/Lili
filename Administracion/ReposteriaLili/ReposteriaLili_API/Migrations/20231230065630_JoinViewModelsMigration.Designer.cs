// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReposteriaLili_API.Infraestructure.Internal.Persistence;

#nullable disable

namespace ReposteriaLili_API.Migrations
{
    [DbContext(typeof(ReposteriaDBContext))]
    [Migration("20231230065630_JoinViewModelsMigration")]
    partial class JoinViewModelsMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReposteriaLili_API.Core.Dominio.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("ApellidoPaterno")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Contrasena")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Correo")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Telefono")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("UserName")
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("IdCliente");

                    b.HasIndex("Correo")
                        .IsUnique()
                        .HasFilter("[Correo] IS NOT NULL");

                    b.HasIndex("Telefono")
                        .IsUnique()
                        .HasFilter("[Telefono] IS NOT NULL");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ReposteriaLili_API.Core.Dominio.Direccion", b =>
                {
                    b.Property<int>("IdDireccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDireccion"));

                    b.Property<string>("Calle")
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("Ciudad")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("Colonia")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Estado")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<string>("Latitud")
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("Longitud")
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("Municipio")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int?>("NumeroExterior")
                        .HasColumnType("int");

                    b.Property<int?>("NumeroInterior")
                        .HasColumnType("int");

                    b.HasKey("IdDireccion");

                    b.HasIndex("IdCliente")
                        .IsUnique();

                    b.ToTable("Direccion");
                });

            modelBuilder.Entity("ReposteriaLili_API.Core.Dominio.Empleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpleado"));

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("ApellidoPaterno")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Cargo")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Contrasena")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Correo")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime?>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdSucursal")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Telefono")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("UserName")
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("IdEmpleado");

                    b.HasIndex("Correo")
                        .IsUnique()
                        .HasFilter("[Correo] IS NOT NULL");

                    b.HasIndex("IdSucursal");

                    b.HasIndex("Telefono")
                        .IsUnique()
                        .HasFilter("[Telefono] IS NOT NULL");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("ReposteriaLili_API.Core.Dominio.Orden", b =>
                {
                    b.Property<int>("IdOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrden"));

                    b.Property<string>("DescripcionIncidenteCliente")
                        .HasColumnType("NVARCHAR(3000)");

                    b.Property<string>("DescripcionIncidenteRepartidor")
                        .HasColumnType("NVARCHAR(3000)");

                    b.Property<string>("EstadoPedido")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<DateTime?>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdDireccionCliente")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("IdDireccionSucursal")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmpleadoRepartidor")
                        .HasColumnType("int");

                    b.Property<int?>("IdTarjeta")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("ImagenIncidenteCliente")
                        .HasColumnType("NVARCHAR(3000)");

                    b.Property<string>("ImagenIncidenteRepartidor")
                        .HasColumnType("NVARCHAR(3000)");

                    b.Property<decimal?>("ImporteTotalOrden")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<int?>("NumeroFolio")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("TiempoEstimadoEntrega")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("TiempoTardoEntrega")
                        .HasColumnType("time");

                    b.HasKey("IdOrden");

                    b.HasIndex("IdDireccionCliente");

                    b.HasIndex("IdDireccionSucursal");

                    b.HasIndex("IdEmpleadoRepartidor");

                    b.HasIndex("IdTarjeta");

                    b.HasIndex("ImagenIncidenteCliente")
                        .IsUnique()
                        .HasFilter("[ImagenIncidenteCliente] IS NOT NULL");

                    b.HasIndex("ImagenIncidenteRepartidor")
                        .IsUnique()
                        .HasFilter("[ImagenIncidenteRepartidor] IS NOT NULL");

                    b.HasIndex("NumeroFolio")
                        .IsUnique()
                        .HasFilter("[NumeroFolio] IS NOT NULL");

                    b.ToTable("Ordenes");
                });

            modelBuilder.Entity("ReposteriaLili_API.Core.Dominio.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<int?>("CantidadDisponible")
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .HasColumnType("NVARCHAR(300)");

                    b.Property<string>("CodigoBarras")
                        .HasColumnType("NVARCHAR(300)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("NVARCHAR(3000)");

                    b.Property<DateTime?>("FechaCaducidad")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagenCodigoBarrasUrl")
                        .HasColumnType("NVARCHAR(3000)");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("NVARCHAR(3000)");

                    b.Property<string>("Nombre")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("DECIMAL(10,2)");

                    b.HasKey("IdProducto");

                    b.HasIndex("CodigoBarras")
                        .IsUnique()
                        .HasFilter("[CodigoBarras] IS NOT NULL");

                    b.HasIndex("ImagenCodigoBarrasUrl")
                        .IsUnique()
                        .HasFilter("[ImagenCodigoBarrasUrl] IS NOT NULL");

                    b.HasIndex("ImagenUrl")
                        .IsUnique()
                        .HasFilter("[ImagenUrl] IS NOT NULL");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("ReposteriaLili_API.Core.Dominio.Producto_Orden", b =>
                {
                    b.Property<int>("IdOrden")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioParcial")
                        .HasColumnType("DECIMAL(10,2)");

                    b.HasKey("IdOrden", "IdProducto");

                    b.HasIndex("IdProducto");

                    b.ToTable("Productos_Ordenes");
                });

            modelBuilder.Entity("ReposteriaLili_API.Core.Dominio.Producto_Sucursal", b =>
                {
                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdSucursal")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.HasKey("IdProducto", "IdSucursal");

                    b.HasIndex("IdSucursal");

                    b.ToTable("Productos_Sucursales");
                });

            modelBuilder.Entity("ReposteriaLili_API.Core.Dominio.Sucursal", b =>
                {
                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSucursal"));

                    b.Property<string>("Calle")
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("Ciudad")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("Colonia")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("DiaFinal")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("DiaInicial")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("Estado")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<TimeSpan?>("HoraFinal")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("HoraInicial")
                        .HasColumnType("time");

                    b.Property<string>("Latitud")
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("Longitud")
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("Municipio")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("NombreComercial")
                        .HasColumnType("NVARCHAR(300)");

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.HasKey("IdSucursal");

                    b.HasIndex("NombreComercial")
                        .IsUnique()
                        .HasFilter("[NombreComercial] IS NOT NULL");

                    b.ToTable("Sucursales");
                });

            modelBuilder.Entity("ReposteriaLili_API.Core.Dominio.Tarjeta", b =>
                {
                    b.Property<int>("IdTarjeta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTarjeta"));

                    b.Property<int?>("CodigoCVV")
                        .HasColumnType("int");

                    b.Property<string>("Emisor")
                        .HasColumnType("NVARCHAR(300)");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<string>("NombreTitular")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<string>("NumeroTarjeta")
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("TipoTarjeta")
                        .HasColumnType("NVARCHAR(30)");

                    b.HasKey("IdTarjeta");

                    b.HasIndex("IdCliente")
                        .IsUnique();

                    b.HasIndex("NumeroTarjeta")
                        .IsUnique()
                        .HasFilter("[NumeroTarjeta] IS NOT NULL");

                    b.ToTable("Tarjetas");
                });

            modelBuilder.Entity("ReposteriaLili_API.Core.Dominio.Direccion", b =>
                {
                    b.HasOne("ReposteriaLili_API.Core.Dominio.Cliente", "Cliente")
                        .WithOne("Direccion")
                        .HasForeignKey("ReposteriaLili_API.Core.Dominio.Direccion", "IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ReposteriaLili_API.Core.Dominio.Empleado", b =>
                {
                    b.HasOne("ReposteriaLili_API.Core.Dominio.Sucursal", "Sucursal")
                        .WithMany("Empleados")
                        .HasForeignKey("IdSucursal")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("ReposteriaLili_API.Core.Dominio.Orden", b =>
                {
                    b.HasOne("ReposteriaLili_API.Core.Dominio.Direccion", "Direccion")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdDireccionCliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReposteriaLili_API.Core.Dominio.Sucursal", "Sucursal")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdDireccionSucursal");

                    b.HasOne("ReposteriaLili_API.Core.Dominio.Empleado", "Empleado")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdEmpleadoRepartidor")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReposteriaLili_API.Core.Dominio.Tarjeta", "Tarjeta")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdTarjeta")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Direccion");

                    b.Navigation("Empleado");

                    b.Navigation("Sucursal");

                    b.Navigation("Tarjeta");
                });

            modelBuilder.Entity("ReposteriaLili_API.Core.Dominio.Producto_Orden", b =>
                {
                    b.HasOne("ReposteriaLili_API.Core.Dominio.Orden", "Orden")
                        .WithMany("ProductoOrden")
                        .HasForeignKey("IdOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReposteriaLili_API.Core.Dominio.Producto", "Producto")
                        .WithMany("ProductoOrden")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orden");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("ReposteriaLili_API.Core.Dominio.Producto_Sucursal", b =>
                {
                    b.HasOne("ReposteriaLili_API.Core.Dominio.Producto", "Producto")
                        .WithMany("ProductoSucursal")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReposteriaLili_API.Core.Dominio.Sucursal", "Sucursal")
                        .WithMany("ProductoSucursal")
                        .HasForeignKey("IdSucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("ReposteriaLili_API.Core.Dominio.Tarjeta", b =>
                {
                    b.HasOne("ReposteriaLili_API.Core.Dominio.Cliente", "Cliente")
                        .WithOne("Tarjeta")
                        .HasForeignKey("ReposteriaLili_API.Core.Dominio.Tarjeta", "IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ReposteriaLili_API.Core.Dominio.Cliente", b =>
                {
                    b.Navigation("Direccion");

                    b.Navigation("Tarjeta");
                });

            modelBuilder.Entity("ReposteriaLili_API.Core.Dominio.Direccion", b =>
                {
                    b.Navigation("Ordenes");
                });

            modelBuilder.Entity("ReposteriaLili_API.Core.Dominio.Empleado", b =>
                {
                    b.Navigation("Ordenes");
                });

            modelBuilder.Entity("ReposteriaLili_API.Core.Dominio.Orden", b =>
                {
                    b.Navigation("ProductoOrden");
                });

            modelBuilder.Entity("ReposteriaLili_API.Core.Dominio.Producto", b =>
                {
                    b.Navigation("ProductoOrden");

                    b.Navigation("ProductoSucursal");
                });

            modelBuilder.Entity("ReposteriaLili_API.Core.Dominio.Sucursal", b =>
                {
                    b.Navigation("Empleados");

                    b.Navigation("Ordenes");

                    b.Navigation("ProductoSucursal");
                });

            modelBuilder.Entity("ReposteriaLili_API.Core.Dominio.Tarjeta", b =>
                {
                    b.Navigation("Ordenes");
                });
#pragma warning restore 612, 618
        }
    }
}
